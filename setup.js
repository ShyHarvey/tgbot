const fs = require('fs');
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

console.log('ü§ñ Telegram Message Forwarding Bot Setup\n');

function question(prompt) {
    return new Promise((resolve) => {
        rl.question(prompt, resolve);
    });
}

async function setup() {
    try {
        // Check if .env already exists
        if (fs.existsSync('.env')) {
            const overwrite = await question('.env file already exists. Overwrite? (y/N): ');
            if (overwrite.toLowerCase() !== 'y') {
                console.log('Setup cancelled.');
                rl.close();
                return;
            }
        }

        console.log('\nüìù Please provide the following information:\n');

        const botToken = await question('1. Bot Token (from @BotFather): ');
        if (!botToken.trim()) {
            console.log('‚ùå Bot token is required!');
            rl.close();
            return;
        }

        const channelId = await question('2. Notification Channel ID (e.g., -1001234567890): ');
        if (!channelId.trim()) {
            console.log('‚ùå Channel ID is required!');
            rl.close();
            return;
        }

        const targetFile = await question('3. Target chats file (default: target_chats.json): ') || 'target_chats.json';
        const logLevel = await question('4. Log level (default: info): ') || 'info';
        const maxChats = await question('5. Max target chats (default: 100): ') || '100';

        // Create .env content
        const envContent = `# Telegram Bot Configuration
# Generated by setup script

BOT_TOKEN=${botToken}
NOTIFICATION_CHANNEL_ID=${channelId}
TARGET_CHATS_FILE=${targetFile}
LOG_LEVEL=${logLevel}
MAX_TARGET_CHATS=${maxChats}
POLLING_TIMEOUT=30000
`;

        // Write .env file
        fs.writeFileSync('.env', envContent);

        console.log('\n‚úÖ Configuration saved to .env file!');
        console.log('\nüìã Next steps:');
        console.log('1. Add your bot to the notification channel as an admin');
        console.log('2. Start the bot with: npm start');
        console.log('3. Send /start to your bot in private chat');
        console.log('4. Use /add to add target chats');

    } catch (error) {
        console.error('‚ùå Setup failed:', error.message);
    } finally {
        rl.close();
    }
}

setup();
